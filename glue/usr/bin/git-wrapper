#!/bin/bash

# per user ssh env
SSH_ENV="${SNAP_USER_DATA}/ssh-environment"

# helper function to start own ssh-agent
# agent will also load default ssh key
start_agent () {
    ssh-agent | sed 's/^echo/#echo/' > "${SSH_ENV}"
    echo "ssh-agent succeefully started"
    chmod 600 ${SSH_ENV}
    . ${SSH_ENV} > /dev/null
    if [ -e "${SSH_DIR}/id_rsa" ]; then
        ssh-add;
    else
        echo "There is no identity under ${SSH_DIR} to be added, you might want to add it"
    fi
}

# check what is real home for current user, we can run on core and classic system
if [ -f "/etc/passwd" ] &&  [ "$(du /etc/passwd | cut -c -1)" != "0" ] ; then
    SSH_DIR=$(grep ${USER} /etc/passwd | awk -F ":" '{ print $6}')/.ssh
fi

if [ -f "/var/lib/extrausers/passwd" ] && [ "$(du /var/lib/extrausers/passwd | cut -c -1)" != "0" ] ; then
    SSH_DIR=$(grep ${USER} /var/lib/extrausers/passwd | awk -F ":" '{ print $6}')/.ssh
fi

if [ -d "${SSH_DIR}" ]; then
    # Source SSH settings, if applicable
    if [ -f "${SSH_ENV}" ]; then
        unset SSH_AGENT_PID
        unset SSH_AUTH_SOCK
        . ${SSH_ENV} > /dev/null
        if [ -z "${SSH_AGENT_PID}" ] || [ "x$(ps -ef | grep ${SSH_AGENT_PID} | grep ssh-agent)" = "x" ]; then
           start_agent;
        fi
    else
        start_agent
    fi
# else
#    echo "There no ${SSH_DIR} no need for ssh-agent"
fi

exec "$@"